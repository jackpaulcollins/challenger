{"ast":null,"code":"var _jsxFileName = \"/Users/jackcollins/Desktop/moi_challenger/client/src/components/ReportEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_ROOT } from '../src/apiRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportEdit = props => {\n  _s();\n\n  const [rep_type, setRepType] = useState(\"\");\n  const [rep_count, setRepCount] = useState(\"\");\n  let params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.state.report) {\n      setRepType(location.state.report.rep_type);\n      setRepCount(location.state.report.rep_count);\n    }\n  }, []);\n  const id = params.id;\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let data = await axios.put(`${API_ROOT}/api/reports/${id}`, {\n      rep_type: rep_type,\n      rep_count: rep_count\n    });\n\n    if (data) {\n      alert(`      Report Updated!\\n\n      Rep Type: ${data.data.report.rep_type}\\n \n      Rep Count: ${data.data.report.rep_count}`);\n      navigate(\"/\");\n    }\n  }\n\n  async function deleteReport(e) {\n    e.preventDefault();\n    let data = await axios.delete(`${API_ROOT}/api/reports/${id}`);\n\n    if (data) {\n      alert('report deleted!');\n      navigate(\"/\");\n    }\n  }\n\n  if (location.state) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-1\",\n          controlId: \"rep_type\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: location.state.report.rep_type,\n            name: \"rep_type\",\n            value: rep_type,\n            onChange: e => setRepType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-1\",\n          controlId: \"rep_count\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: location.state.report.rep_count,\n            name: \"rep_count\",\n            value: rep_count,\n            onChange: e => setRepCount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: deleteReport,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return navigate('/');\n  }\n};\n\n_s(ReportEdit, \"RMy66sX++fH6LWNMtjNMO62BX9I=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n\n_c = ReportEdit;\nexport default ReportEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportEdit\");","map":{"version":3,"sources":["/Users/jackcollins/Desktop/moi_challenger/client/src/components/ReportEdit.js"],"names":["React","useEffect","useState","Form","Button","useParams","useLocation","useNavigate","axios","API_ROOT","ReportEdit","props","rep_type","setRepType","rep_count","setRepCount","params","location","navigate","state","report","id","handleSubmit","e","preventDefault","data","put","alert","deleteReport","delete","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport { useParams, useLocation, useNavigate } from 'react-router-dom'\nimport axios from 'axios';\nimport { API_ROOT } from '../src/apiRoot'\n\nconst ReportEdit = props => {\n  const [ rep_type, setRepType ] = useState(\"\");\n  const [ rep_count, setRepCount ] = useState(\"\");\n  let params = useParams()\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (location.state.report) {\n      setRepType(location.state.report.rep_type);\n      setRepCount(location.state.report.rep_count);\n    }\n  }, []);\n\n  const id = params.id\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    let data = await axios.put(`${API_ROOT}/api/reports/${id}`, {\n      rep_type: rep_type,\n      rep_count: rep_count\n    })\n    if (data) {\n      alert(`      Report Updated!\\n\n      Rep Type: ${data.data.report.rep_type}\\n \n      Rep Count: ${data.data.report.rep_count}`\n     )\n      navigate(\"/\");\n    }\n  }\n\n  async function deleteReport(e) {\n    e.preventDefault()\n    let data = await axios.delete(`${API_ROOT}/api/reports/${id}`)\n    if (data) {\n      alert('report deleted!')\n      navigate(\"/\");\n    }\n  }\n\n  if (location.state){\n    return (\n      <div>\n      <Form onSubmit={e => handleSubmit(e)}>\n        <Form.Group className=\"mb-1\" controlId=\"rep_type\">\n          <Form.Control \n            type=\"text\" \n            placeholder={location.state.report.rep_type}\n            name=\"rep_type\"\n            value={rep_type}\n            onChange={e => setRepType(e.target.value)} \n          />\n        </Form.Group>\n        <Form.Group className=\"mb-1\" controlId=\"rep_count\">\n          <Form.Control \n            type=\"number\" \n            placeholder={location.state.report.rep_count} \n            name=\"rep_count\"\n            value={rep_count} \n            onChange={e => setRepCount(e.target.value)} \n          />\n        </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">Update</Button>\n    </Form>\n    <Button variant=\"primary\" onClick={deleteReport}>Delete</Button>\n    </div>\n    )\n  } else {\n    return (\n      navigate('/')\n    )\n  }\n}\n\nexport default ReportEdit;"]},"metadata":{},"sourceType":"module"}